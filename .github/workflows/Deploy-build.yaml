name: Build and Push Docker Image to ECR

on:
  # push:
  #   paths:
  #     - 'Src/*'  # Trigger only when Python files change inside the src folder
  #     - 'Dockerfile' 
  #   branches:
  #     - main
  workflow_dispatch:

env:
  AWS_REGION: "ca-central-1"
  AWS_EC2: "CICD-ec2-instance"
  ECR_REPO: "docker-flask"
  GIT_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }} 

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }} .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Public IP and SHA
        run: |
          echo "EC2_PUBLIC_IP=$(aws ec2 describe-instances --filters Name=tag:Name,Values=${{ env.AWS_EC2 }} --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)" >> "$GITHUB_ENV"
          echo "SHA: $GITHUB_SHA"
    
      - name: Decode EC2 SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" | tr -d '\r' | sed 's/\\n/\n/g' > decoded_key.pem
          chmod 600 decoded_key.pem
          echo "EC2_SSH_KEY<<EOF" >> $GITHUB_ENV
          cat decoded_key.pem >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ env.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Cleaning up the VM"
            docker ps -aq | xargs -r docker rm -f
            docker images -q | xargs -r docker rmi -f

            echo "Logging in to ECR"
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

            echo "Running container"
            docker run -td -p 80:5000 --name flask-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}
